CREATE TABLE comments
(
	comment_no            VARCHAR2(100) PRIMARY KEY ,
	member_no             VARCHAR2(100)  NOT NULL ,
	tour_id               VARCHAR2(100)  NOT NULL ,
	comment_content       VARCHAR2(2000)  NOT NULL ,
	comment_date          TIMESTAMP(2)  NOT NULL 
);

CREATE TABLE hashtag
(
	hashtag_no            VARCHAR2(100)  PRIMARY KEY ,
	hashtag_content       CLOB  NOT NULL ,
	lodgment_no           VARCHAR2(100)  NOT NULL 
);

CREATE TABLE lodg_withdraw
(
	lodgdraw_no           VARCHAR2(100)  PRIMARY KEY ,
	host_id               VARCHAR2(50)  NOT NULL ,
	host_email            VARCHAR2(50)  NOT NULL ,
	company               VARCHAR2(30)  NOT NULL ,
	address               VARCHAR2(200)  NOT NULL ,
	business_no           VARCHAR2(100)  NOT NULL ,
	host_name             VARCHAR2(20)  NOT NULL ,
	location              VARCHAR2(30)  NOT NULL ,
	withdraw_date         TIMESTAMP(2)  NULL 
);

CREATE TABLE lodgment
(
	lodgment_no           VARCHAR2(100)  PRIMARY KEY ,
	host_id               VARCHAR2(50)  NOT NULL ,
	host_email            VARCHAR2(50)  NOT NULL ,
	host_pw               VARCHAR2(50)  NOT NULL ,
	host_phone            VARCHAR2(50)  NOT NULL ,
	company               VARCHAR2(30)  NOT NULL ,
	address               VARCHAR2(200)  NOT NULL ,
	business_no           VARCHAR2(100)  NOT NULL ,
	host_name             VARCHAR2(20)  NOT NULL ,
	location              VARCHAR2(30)  NOT NULL ,
	lodgment_state        VARCHAR2(20)  NOT NULL ,
	lodgment_type         VARCHAR2(20)  NOT NULL ,
	lodgment_img          VARCHAR2(100)  NOT NULL ,
	lodgment_info         CLOB  NULL ,
	signup_date           TIMESTAMP(2)  NULL 
);

CREATE TABLE mem_withdraw
(
	memdraw_no            VARCHAR2(100)  PRIMARY KEY ,
	member_email          VARCHAR2(50)  NOT NULL ,
	member_nick           VARCHAR2(50)  NOT NULL ,
	member_name           VARCHAR2(50)  NOT NULL ,
	withdraw_date         TIMESTAMP(2)  NOT NULL 
);

CREATE TABLE member
(
	member_no             VARCHAR2(100)  PRIMARY KEY ,
	member_email          VARCHAR2(50)  NOT NULL ,
	member_nick           VARCHAR2(50)  NOT NULL ,
	member_name           VARCHAR2(50)  NOT NULL ,
	member_pw             VARCHAR2(50)  NOT NULL ,
	member_img            VARCHAR2(100)  NULL ,
	member_intro          CLOB  NULL ,
	member_point          NUMBER  NOT NULL ,
	signup_date           TIMESTAMP(2)  NULL 
);

CREATE TABLE postscript
(
	postscript_no         VARCHAR2(100)  PRIMARY KEY ,
	postscript_content    VARCHAR2(2000)  NOT NULL ,
	grade                 NUMBER  NOT NULL ,
	postscript_date       TIMESTAMP(2)  NOT NULL ,
	member_no             NUMBER  NOT NULL ,
	reserve_no            VARCHAR2(100)  NOT NULL ,
	lodgment_no           VARCHAR2(100)  NOT NULL 
);


CREATE TABLE reservation
(
	reserve_no            VARCHAR2(100)  PRIMARY KEY ,
	reserve_date          TIMESTAMP(2)  NOT NULL ,
	reserve_price         NUMBER  NOT NULL ,
	reserve_people        NUMBER  NOT NULL ,
	checkin               TIMESTAMP(2)  NOT NULL ,
	room_no               VARCHAR2(100)  NOT NULL ,
	member_no             VARCHAR2(100)  NOT NULL ,
	reserve_points        NUMBER  NOT NULL ,
	lodgment_no           VARCHAR2(100)  NOT NULL ,
	reserve_state         VARCHAR2(20)  NOT NULL ,
	checkout              TIMESTAMP(2)  NOT NULL 
);

CREATE TABLE tour
(
	tour_id               VARCHAR2(100) PRIMARY KEY,
	tour_name             VARCHAR2(50)  NOT NULL ,
	tour_content          CLOB  NOT NULL ,
	tour_title            VARCHAR2(100)  NOT NULL ,
	tour_img              VARCHAR2(500)  NOT NULL ,
	member_no             VARCHAR2(100)  NOT NULL ,
	tour_date             TIMESTAMP(2)  NOT NULL ,
	tour_location         VARCHAR2(30)  NOT NULL ,
	tour_state            VARCHAR2(20)  NOT NULL 
);

CREATE TABLE tour_like
(
	like_date             TIMESTAMP(2)  NOT NULL ,
	member_no             VARCHAR2(100)  NOT NULL ,
	tour_id               VARCHAR2(100)  NOT NULL 
);

ALTER TABLE tour_like
	ADD CONSTRAINT  XPK관광선호 PRIMARY KEY (tour_id,member_no);
	
	  CREATE TABLE "DAILY"."ROOM" 
   (	"ROOM_NO" VARCHAR2(100 BYTE), 
	"ROOM_PRICE" NUMBER, 
	"ROOM_CAPA" NUMBER, 
	"ROOM_INFO" CLOB, 
	"LODGMENT_NO" VARCHAR2(100 BYTE), 
	"ROOM_IMG" VARCHAR2(500 BYTE), 
	"ROOM_NAME" VARCHAR2(50 BYTE), 
	"ROOM_QUANTITY" NUMBER, 
	"ROOM_STATE" VARCHAR2(20 BYTE)
   ) 
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO100002',1111,222,'1','Hydrangeas.jpg,Lighthouse.jpg,Desert.jpg','hihi',11,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO100003',80000,2,'1','VIP4NBQBQVNODDVDSYJIZLMW5A.jpg,seunghwan_oh.jpg,DkkxsxzXcAAkUl5.jpg,usa_today_10992364.jpg','럭셔리',10,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO100001',1111,23,'1','Hydrangeas.jpg','hohoho',1,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO100000',1000,222,'1','Desert.jpg,Hydrangeas.jpg,Tulips.jpg','hihi',11,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181818',200000,3,'1','a.jpg||b.jpg||c.jpg||d.jpg||','스위트룸',5,'OBB1');


select * from ROOM;

select * from ROOM where ROOM_NO = 'RO181818';

select * from LODGMENT;

/*숙박업체의 객실정보*/
select R.ROOM_PRICE, R.ROOM_CAPA, R.ROOM_INFO, R.ROOM_IMG, R.ROOM_NAME, R.ROOM_QUANTITY
  from LODGMENT L join ROOM R
    on(L.LODGMENT_NO = R.LODGMENT_NO)
where R.LODGMENT_NO = 'LOD50';

/*Room insert*/
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,ROOM_INFO,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181819',1111,222,'드라이기','LOD50','a.jpg||b.jpg||c.jpg||d.jpg||','스탠다드',11,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,ROOM_INFO,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181820',80000,2,'세면도구','LOD50','a.jpg||b.jpg||c.jpg||d.jpg||','럭셔리',10,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,ROOM_INFO,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181821',1111,23,'면도기','LOD50','a.jpg||b.jpg||c.jpg||d.jpg||','듀플렉스',1,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,ROOM_INFO,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181822',1000,222,'샴푸','LOD50','a.jpg||b.jpg||c.jpg||d.jpg||','스위트',11,'B3');
Insert into DAILY.ROOM (ROOM_NO,ROOM_PRICE,ROOM_CAPA,ROOM_INFO,LODGMENT_NO,ROOM_IMG,ROOM_NAME,ROOM_QUANTITY,ROOM_STATE) values ('RO181823',200000,3,'주차장','LOD50','a.jpg||b.jpg||c.jpg||d.jpg||','스위트룸',5,'OBB1');

select * from LODGMENT;

select p.POSTSCRIPT_CONTENT
  from POSTSCRIPT p join LODGMENT l
      on(p.LODGMENT_NO = l.LODGMENT_NO)
where p.LODGMENT_NO = 'LOD50';

SELECT p.POSTSCRIPT_CONTENT, r.ROOM_NAME, l.LODGMENT_NO
FROM POSTSCRIPT p JOIN ROOM r
    ON p.ROOM_NO = r.ROOM_NO JOIN LODGMENT l
    ON p.LODGMENT_NO = l.LODGMENT_NO
       AND l.LODGMENT_NO = 'LOD50'
order by p.POSTSCRIPT_NO desc;