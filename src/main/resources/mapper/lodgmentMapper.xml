<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lodgment">
	<!-- 단건 조회 -->
	<select id="getLodgment" parameterType="lodgment" resultType="lodgment">
		SELECT * FROM LODGMENT
			WHERE LODGMENT_NO = #{lodgmentNo}
	</select>

	<!-- 전체 조회 -->
	<select id="getLodgments" resultType="lodgment" parameterType="lodgmentSearch">
	SELECT * FROM ( SELECT U.*, ROWNUM RN FROM (
		SELECT LODGMENT_NO, COMPANY, ADDRESS,
			   LOCATION, LODGMENT_TYPE, LODGMENT_INFO, HOST_NAME,
			   (SELECT COUNT(*)
				FROM ROOM
				WHERE ROOM.LODGMENT_NO = LODGMENT.LODGMENT_NO)
				AS roomCnt
			FROM LODGMENT
		<where>
			<if test="ids != null">
				LODGMENT_NO IN
				<foreach collection="ids" open="(" close=")" separator="," item="item">
					#{item}
				</foreach>
			</if>

			<if test="searchCondition == 'lodgmentNo'">
				AND LODGMENT_NO LIKE '%' || #{searchKeyword} || '%'
			</if>
						
			<if test="searchCondition == 'company'">
				AND COMPANY LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'location'">
				AND LOCATION LIKE '%' || #{searchKeyword} || '%'		
			</if>
<!-- 			<if test="role != null and role != ''">
				AND ROLE = #{role}
			</if> -->
		</where>
		ORDER BY
		<choose>
			<when test="sort != null and sort != ''">
				#{sort}
			</when>
			<otherwise>
				LODGMENT_NO
			</otherwise>
		</choose>
	) U ) A WHERE RN BETWEEN #{start} and #{end}
	</select>
	
	<!-- 페이징 처리에 필요. 검색 조건에 대한 Cnt 조회 -->
	<select id="getCnt" resultType="int" parameterType="lodgmentSearch">
		SELECT COUNT(*)
			FROM LODGMENT
		<where>
			<if test="ids != null">
				LODGMENT_NO IN
				<foreach collection="ids" open="(" close=")" separator="," item="item">
					#{item}
				</foreach>
			</if>
			<if test="searchCondition == 'company'">
				AND COMPANY LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'location'">
				AND LOCATION LIKE '%' || #{searchKeyword} || '%'		
			</if>
		</where>
	</select>

	<select id="getMainSearch" parameterType="lodgmentSearch" resultType="lodgmentSearch">
		  SELECT l.LODGMENT_NO,l.COMPANY, g.AVG_GRADE, g.people_cnt
	      FROM LODGMENT l  LEFT OUTER JOIN (SELECT ROUND(AVG(GRADE),1) AS AVG_GRADE ,COUNT(*) AS people_cnt, LODGMENT_NO
	                                        FROM POSTSCRIPT
	                                        GROUP BY LODGMENT_NO) g
	      ON l.LODGMENT_NO = g.LODGMENT_NO
	      <where> 
	      	<if test="location != null and location != '' ">
	      		AND l.LOCATION = #{location}
	      	</if>
	      	
	      	<if test="lodgmentType != null and lodgmentType != '' ">	
	      		AND l.LODGMENT_TYPE = #{lodgmentType}
	      	</if>
			
			 <if test="sort != null and sort != '' ">		
	      		ORDER BY #{sort} DESC
	      	</if>		      	
	      </where>
	</select>
	<update id="setLodgment" parameterType="lodgment">
		UPDATE LODGMENT
		<set> 
			  <if test="company != null and company != ''">
			  	COMPANY 	 	= #{company},
			  </if>
			  <if test="lodgmentType != null and lodgmentType != ''">
			 	 LODGMENT_TYPE 	= #{lodgmentType},
			  </if>
			  <if test="lodgmentImg != null and lodgmentImg != ''">
			  	  LODGMENT_IMG	= #{lodgmentImg},
			  </if>
			  <if test="lodgmentInfo != null and lodgmentInfo != ''">
			  		LODGMENT_INFO 	= #{lodgmentInfo}
			  </if>
			  
		</set>
		WHERE LODGMENT_NO	= #{lodgmentNo}
	
	</update>
	
	<insert id="insertHashTag" parameterType="hashtag">
		INSERT INTO HASHTAG(HASHTAG_NO, HASHTAG_CONTENT, LODGMENT_NO)
		VALUES(TO_CHAR(HASHTAG_SEQ.nextval), #{hashtagContent}, #{lodgmentNo})
	</insert>

	<!-- 수정 미완성-->
<!-- 	
	<update id="updateHost" parameterType="host">
		UPDATE LODGMENT SET PASSWORD = #{password},
						 NAME = #{name},
						 ROLE = #{role}
			WHERE ID = #{id}
	</update> -->
	
	<!-- 삭제 -->
	<delete id="deleteLodgment" parameterType="lodgment">
		DELETE FROM LODGMENT WHERE LODGMENT_NO = #{lodgmentNo}
	</delete>
	
</mapper> 